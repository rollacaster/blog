#+TITLE: Thomas Sojka
#+DATE: <2018-02-11>
#+AUTHOR: Thomas Sojka
#+EMAIL: contact@thomas-sojka.tech

#+OPTIONS: ':nil *:t -:t ::t <:t H:2 \n:nil ^:t arch:headline author:nil
#+OPTIONS: broken-links:nil c:nil creator:nil d:(not "LOGBOOK") date:nil e:t
#+OPTIONS: email:nil f:t inline:t num:nil p:nil pri:nil prop:nil stat:t tags:t
#+OPTIONS: tasks:t tex:t timestamp:nil title:t toc:nil todo:t |:t

#+OPTIONS: html-link-use-abs-url:nil html-preamble:t
#+OPTIONS: html-postamble:t
#+OPTIONS: html-scripts:t html-style:t html5-fancy:t tex:t
#+HTML_DOCTYPE: html5
#+HTML_CONTAINER: section
#+DESCRIPTION: data visualizations | frontend development | functional programming
#+KEYWORDS: programming emacs clojure javascript blog tech
#+HTML_HEAD: <link rel='stylesheet' href='css/site.css' type='text/css'/>
#+HTML_HEAD_EXTRA:
#+CREATOR: <a href="https://www.gnu.org/software/emacs/">Emacs</a> 26.3 (<a href="https://orgmode.org">Org</a> mode 9.1.9)

* Creating elisp packages
  :PROPERTIES:
  :ID:       8A16E3E1-5982-475E-9809-B00788641DFB
  :PUBDATE:  <2020-06-26 Fri 07:51>
  :END:
#+ATTR_HTML: :alt An addition of the Emacs Logo and the Melpa Logo results in a package
[[file:intro.png]]

Last week my first =elisp= package [[file:elcontext.org][elcontext]] was published on [[https://melpa.org/#/elcontext][melpa]]. It was the first time I have published a non-=JavaScript= package. Now I would like to share the differences between the =elisp= and the =JavaScript= ecosystem I experienced.

** Learning elisp
   :PROPERTIES:
   :ID:       5237647D-E822-49DC-99E3-3F3270CACE5B
   :END:
The first step for creating a package is obviously to learn =elisp=. Resources which helped me were the [[https://www.gnu.org/software/emacs/manual/html_node/eintr/index.html][Introduction to Programming in Emacs Lisp]], the [[https://www.gnu.org/software/emacs/manual/html_node/elisp/index.html][Emacs Lisp Reference Manual]] and [[http://ergoemacs.org/emacs/elisp.html][Practical Emacs Lisp]]. A big difference to my usual =JavaScript= development experience was Emacs’ built-in help system. I discovered many useful =elisp= snippets in other packages by browsing through their help buffers and sources. It is important to know many =elisp= packages and to learn from their code since there are fewer online resources about =elisp= compared to =JavaScript=.

Writing lisp was intimidating at first but [[https://melpa.org/#/paredit][paredit]] was a great help to stay sane with hordes of parentheses. The [[http://danmidwood.com/content/2014/11/21/animated-paredit.html][Animated Guide to Paredit]] and [[http://emacsrocks.com/e14.html][Emacs Rocks!]] are great introductions for paredit. Today I cannot imagine writing any code (including =JavaScript=) without slurping & barfing.

#+ATTR_HTML: :alt The MELPA Logo
[[file:melpa.png]]

After writing [[file:elcontext.org][elcontext]] I published it on [[https://melpa.org/#/][melpa]] which is elisp’s equivalent to [[https://www.npmjs.com/][npm]]. Instead of a one simple =npm publish= you have to perform several steps for melpa. First, you need to use [[https://github.com/purcell/package-lint][package-lint]] which informs you about common issues of your package. Then, you must run =M x checkdoc= which verifies a consistent usage of documentation strings. The steps before opening a PR to melpa are to ensure your code byte-compiles cleanly and to test whether you are able to install your package by using melpa locally. Now you can create a recipe that looks similar to this one:

#+BEGIN_SRC emacs-lisp
(elcontext :repo "rollacaster/elcontext"
           :fetcher github)
#+END_SRC

After submitting your PR, melpa’s maintainers review your code and suggest some improvements. I learned a lot about =elisp= by applying the reviews’ comments and I checked [[https://github.com/melpa/melpa/pulls][some other PRs]] on melpa to learn even more.

Adding a package to melpa is definitely more work compared to npm but I am also much more confident about the quality of my package.

** Conclusion
   :PROPERTIES:
   :ID:       206A1300-5C46-445E-BCC7-D602F64881FA
   :END:
Getting out of my usual =JavaScript= development was a valuable lesson. Looking at other programming languages and communities seems to be one of the fastest ways to evolve as a programmer. I hope I will be doing this at least once a year.

*** Attributions
    :PROPERTIES:
    :ID:       EC033E30-5B74-427A-A7BA-78BB8EC74E2D
    :END:
- ”[[https://www.gnu.org/software/emacs/manual/html_node/eintr/index.html][Emacs Icon]]” by [[https://nicolas.petton.fr/][Nicolas Petton]], used under [[https://creativecommons.org/licenses/by-sa/4.0/][CC BY-SA 4.0]]
- ”[[http://www.softicons.com/business-icons/ecommerce-and-business-icons-by-designcontest.com/packaging-icon][Packaging Icon]]” by [[http://www.softicons.com/designers/designcontest.com][DesignContest.com]], used under [[https://creativecommons.org/licenses/by/3.0/][CC BY]]
